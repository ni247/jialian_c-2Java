jsp:
	java servler pages java服务器页面
	本质上jsp就是一个servlet,在html代码中嵌套java代码
	运行在服务器端,处理请求,生成动态的内容
	对一个的java和class文件在tomcat目录下的work目录
	后缀名就是 .jsp
	
	执行流程:
		1.浏览器发送请求,访问jsp页面
		2.服务器接受请求,jspservet会帮我们查找对应的jsp文件
		3.服务器将jsp页面翻译成java文件
		4.jvm会将java翻译成.class文件
		5.服务器运行class文件,生成动态的内容
		6.将内容发送给服务器
		7.服务器组成响应信息,发送给浏览器
		8.浏览器接受数据,解析展示
	
需要修改首选项-web-jspfiles 默认编码为utf-8

	jsp脚本:
		<%...%> java程序片段
			生成在jsp的service方法中
		<%=...%>输出表达式
			生成在jsp的service方法中,相当于在java中调用out.print方法打印
		<%!...%>声明成员
			在成员位置上声明
			
会话技术
	当用户打开浏览器的时候,访问不通的资源,知道用户将浏览器关闭,可以认为这是一次会话
	作用:
		因为http协议是一个无状态的协议,记录不论上次访问的内容,用户在访问过程中难免会产生一些数据,
		通过会话技术就可以将状态保存起来
	例如:
		用户登录
		验证码
		购物车
		访问记录
		...
		
分类:
	cookie:浏览器端的会话技术
	session:服务器端的会话技术
	
cookie:
	小饼干 小甜点
	cookie是由服务器生成,通过response将cookie写回浏览器(set-cookie),保留在浏览器(本地硬盘),
	下一次访问,浏览器根据一定的规则携带不同的cookie(通过request的头 cookie)
	cookie的api:
		new Cookie(String key,String value)
	写回浏览器:
		response.addCookie(Cookie c)
	获取cookie:
		Cookie[] request.getCookies()
	cookie的常用方法:
		getName():获取cookie的key
		getValue():获取指定cookie的值
        setMaxAge():设置cookie最大生存时间,以秒为单位.
        	若设置为0,删除该cookie(前提必须路径一直)
        setPath(String path):设置cookie的路径
        	当我们访问的路径中包含此cookie的path,则携带
        	默认路径:
        		访问servlet的路径,从"/项目名称"开始,到最后一个"/"结束
        		例如:
        			访问的serlvet路径
        				/day11/a/b/hello
        			默认路径为:
        				/day11/a/b
        	手动设置路径:以"/项目名"开始,以"/"结果;
	
扩展:删除浏览记录
技术分析:
	cookie.setMaxAge(0)

注意:
	cookie不能跨浏览器
	cookie中不支持中文
		
session (httpseesion):
	服务器端会话技术
	常用方法:
		httpSession req.getSession() 获取一个session
	域对象:
		xxxAttributre
		声明周期:
			创建:第一次调用req.getSession()创建
			销毁:
				1.服务器非正常关闭
				2. session超时
					默认时间超时:30分钟 web.xml有配置
					项目中手动设置超时 setMaxInactiveInterval(int 秒),负数时间指示永远不会超时
				3.手动干掉
					session.invalidate() 
		存放的是私有的数据
		
	扩展:清空购物车
		思路1:将购物车移除
		思路2:将session干掉 

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
		

